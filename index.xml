<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>No Wander</title>
    <link>/</link>
    <description>Recent content on No Wander</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Jan 2020 20:11:23 +0800</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dm-Crypt</title>
      <link>/post/dm-crypt/</link>
      <pubDate>Tue, 28 Jan 2020 20:11:23 +0800</pubDate>
      
      <guid>/post/dm-crypt/</guid>
      <description>起因 在编程随想上看到了linux下的全盘加密，我觉得我是有这样的需求的，因此参阅一些资料完成了全盘的加密。
操作 首先对磁盘进行备份，这里使用的dd直接进行全盘加密没有压缩
# dd if=/dev/sda1 of=/mnt/backup.raw status=progress //status是新版本支持的，可以显示dd的进度 //备份到其他地方哈 随后对现有的分区进行加密和格式化
# cryptsetup --cipher aes-xts-plain64 --key-size 512 --hash sha512 --iter-time 10000 luksFormat /dev/sda1 //初始化磁盘加密，这会销毁所有的现有数据 //这里默认是新的LUKS2加密头，GRUB尚未完成对其的加密引导支持，具体可参阅Arch的GRUB wiki，这样的化我们需要单独的/boot分区，未加密的。 # cryptsetup luksOpen /dev/sda1 xxx //打开加密的磁盘，映射到了/dev/mapper/xxx，这个映射的相当于普通的块设备可以直接对其进行mount及其他操作 # mkfs.ext4 /dev/mapper/xxx //你可以将这个挂在到某个地方安装系统或者我们直接dd回来 # dd if=/mnt/backup.raw of=/dev/mapper/xxx //因为superblock的问题，我们可以用下面的来进行对齐修复 # resize2fs /dev/mapper/xxx //运气好不用这样只需要fsck -b指定备用的superblock位置就好 到这里系统就已经就绪了，BTW，以上这些都是在外面的live操作系统操作的
将单独的boot分区挂载到系统的/boot下，随后进行grub安装
# genfstab -U /xxx //生成fstab文件更新 # arch-chroot /xxx //这里把/dev/mapper/xxx 挂载到了/xxx下 # grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB //id可以改ok的 //我这里安装了之后并没有把内核弄进去我不知道是不是EFI分区非空的原因 //之前内核加载进去我是把之前的内核复制过去的:-P 修改/etc/mkinitcpio.conf
MODULES=(vfat ext4) HOOKS=(base udev autodetect keyboard keymap modconf block encrypt filesystems fsck) 修改/etc/default/grub</description>
    </item>
    
    <item>
      <title>Things</title>
      <link>/post/things/</link>
      <pubDate>Thu, 16 Jan 2020 23:40:10 +0800</pubDate>
      
      <guid>/post/things/</guid>
      <description> 界面不是要花哨和酷炫，而是要实用，要让生产力达到最大化 过程化考核是来真的不是其他的 英语是硬伤 惊喜总是陪伴着的  </description>
    </item>
    
    <item>
      <title>WaylandTest</title>
      <link>/post/waylandtest/</link>
      <pubDate>Mon, 16 Dec 2019 19:20:12 +0800</pubDate>
      
      <guid>/post/waylandtest/</guid>
      <description>Wayland First? Test 不知道怎么说，Wayland是个新东西而且理论上确实比X更加的高效，但是不幸的是其还是太新的，很多应用并没有适配wayland协议，导致了上面的应用还是比较少。
GTK3和QT5说都已经支持wayland了，事实上也是这样的情况，大多最新的应用都可以支持包括firefox,libreoffice,lxterminal这些应用，chromium在上面运行不了原因是有GTK2的东西？rdp这些软件也是没有办法的，但是正因为如此我才发现了VirtualBox虚拟机不需要图形化界面就可以运行，&amp;ndash;type headless,这样可以节省开销因为ssh就可以连过去了。
期间使用了sway还是挺好用的，解决了weston下没有快捷键的烦恼，但是大多数应用还是使用的Xwayland,把它干掉后用的应用就挺难受的，重要的是输入法没有候选框。
最后，重新回到了openbox的怀抱，不知道是不是我的错觉，图形化界面竟然是流畅的，可能，Intel显卡驱动还没做wayland吧。
以上</description>
    </item>
    
    <item>
      <title>DataStruct</title>
      <link>/post/datastruct/</link>
      <pubDate>Thu, 24 Oct 2019 16:49:09 +0800</pubDate>
      
      <guid>/post/datastruct/</guid>
      <description>DataStruct a[n][m] = a + m*n + m</description>
    </item>
    
    <item>
      <title>Brower</title>
      <link>/post/brower/</link>
      <pubDate>Mon, 09 Sep 2019 17:43:42 +0800</pubDate>
      
      <guid>/post/brower/</guid>
      <description>&lt;h2 id=&#34;标记语言&#34;&gt;标记语言&lt;/h2&gt;

&lt;p&gt;HTML&lt;br&gt;
XML 人类不友好&lt;/p&gt;

&lt;h2 id=&#34;脚本&#34;&gt;脚本&lt;/h2&gt;

&lt;p&gt;JavaScript&lt;/p&gt;

&lt;h2 id=&#34;渲染引擎&#34;&gt;渲染引擎&lt;/h2&gt;

&lt;p&gt;简称“浏览器内核”&lt;/p&gt;

&lt;h2 id=&#34;web-存储&#34;&gt;Web 存储&lt;/h2&gt;

&lt;h2 id=&#34;跨域资源共享&#34;&gt;跨域资源共享&lt;/h2&gt;

&lt;p&gt;CORS&lt;br&gt;
XMLHttpRequest&lt;br&gt;
Access-Control-Allow-Origin:*&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo&#43;Caddy</title>
      <link>/post/hugo&#43;caddy/</link>
      <pubDate>Sat, 07 Sep 2019 00:07:31 +0800</pubDate>
      
      <guid>/post/hugo&#43;caddy/</guid>
      <description>&lt;p&gt;#环境配置&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hugo : &lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34;&gt;hugo的下载地址(github)&lt;/a&gt;&lt;br&gt;
Caddy : &lt;a href=&#34;https://caddyserver.com/download&#34;&gt;官网下载,需要选择http.git,web.hook插件&lt;/a&gt;&lt;br&gt;
&lt;em&gt;推荐下载新版本，原因为apt的较老，当然能运作也无伤大雅&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 05 Sep 2019 19:21:15 +0800</pubDate>
      
      <guid>/about/</guid>
      <description>I &amp;lsquo;am Brugu.</description>
    </item>
    
  </channel>
</rss>